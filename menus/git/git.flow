visibility: public
namespace: git
tags: [git]
executables:

  - verb: run
    name: git-log
    description: |
      My Git Log commands.
      It shows git log using custom commands.
      commands avaliable:
        - "By Name" : show git log showing username
        - "By Email" : show git log showing user email
        - "Last Commit" : show the last commit message 
    exec:
      logMode: text
      dir: "//"
      cmd: ./jam.sh menus/git/git-log/git-log.yaml

  - verb: run
    name: git-branch
    description: |
      My Git Branch commands.
      It shows git branch using custom commands.
      commands avaliable:
        - "Switch" : Switch branch interactively
        - "New" : Create a new branch interactively
        - "Check" : Check it current branch exists on repository 
        - "Default" : Go to branch default 
        - "Clean" : Remove all local branches, keeping only the current branch 
    exec:
      logMode: text
      dir: "//"
      cmd: ./jam.sh menus/git/git-branch/git-branch.yaml


  - verb: run
    name: git-repo
    description: |
      My Git Repo commands.
      It shows git repo using custom commands.
      commands avaliable:
        - "Github Create" : Create a repository on Github interactively
        - "Fetch" : Git fetch on the repository silently.
        - "Force Pull" : Force pull locally. Discar local changes and do the git fetch.
        - "Clone" : Git clone interactively.
        - "Repo name" : Show the repository name.
        - "Repo web" : Open repository on the browser .
    exec:
      logMode: text
      dir: "//"
      cmd: ./jam.sh menus/git/git-repository/git-repository.yaml


  - verb: run
    name: git-status
    description: |
      My Git Status commands.
      It shows git status using custom commands.
      commands avaliable:
        - "Remove untracked" : Remove all the untracked files.
        - "Clean" : Undo the modifications (Staged and not-staged) . Keep the untracked files.
    exec:
      logMode: text
      dir: "//"
      cmd: ./jam.sh menus/git/git-status/git-status.yaml


  - verb: run
    name: git-commit
    description: |
      My Git Commit commands.
      It shows git commit using custom commands.
      commands avaliable:
        - "Undo" : Undo commit, and files back to the 'stage area'
        - "New" : Create a new commit interactively
        - "Amend" : Add the current modifications in git status to the last commit (HEAD), and force push.
        - "Squash" : Function to squash multiple commits into a single one.
            You pass the number as a parameter, like this:
            git_squash_commits 5: It will consider the last 5 commits to squash.
        - "Squash Equals" : Function to squash multiple commits into a single one.
            It uses the number of times the last commit message was repeated.
    exec:
      logMode: text
      dir: "//"
      cmd: ./jam.sh menus/git/git-commit/git-commit.yaml


  - verb: run
    name: git-tag
    description: |
      My Git Tag commands.
      It shows git tag using custom commands.
      commands avaliable:
        - "New branch from tag" : Create a new branch from tag 
        - "Rename" : Rename tag 
    exec:
      logMode: text
      dir: "//"
      cmd: ./jam.sh menus/git/git-tag/git-tag.yaml
